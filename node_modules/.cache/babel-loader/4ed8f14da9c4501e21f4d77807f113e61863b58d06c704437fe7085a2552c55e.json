{"ast":null,"code":"//引入axios\nimport axios from \"axios\";\n//通过axios创建request对象\nconst request = axios.create({\n  timeout: 5000 //设置超时时长为5秒\n});\n//创建request的拦截器，在请求之前做统一的处理，这里是设置Content-Type\nrequest.interceptors.request.use(config => {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8';\n  return config;\n}, error => {\n  //如果出错则不继续执行\n  return Promise.reject(error);\n});\n//response拦截器，统一处理返回结果\nrequest.interceptors.response.use(response => {\n  let res = response.data;\n  //如果response是文件类型的就直接返回\n  if (response.config.responseType === 'blob') {\n    return res;\n  }\n  //如果data是string类型的就转换成json\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  }\n  return res;\n});\n\n//导出\nexport default request;","map":{"version":3,"names":["axios","request","create","timeout","interceptors","use","config","headers","error","Promise","reject","response","res","data","responseType","JSON","parse"],"sources":["D:/Intelij_IDEA_Project/sun_ssm_vue/ssm_vue/src/utils/request.js"],"sourcesContent":["//引入axios\r\nimport axios from \"axios\";\r\n//通过axios创建request对象\r\nconst request = axios.create({\r\n    timeout: 5000 //设置超时时长为5秒\r\n})\r\n//创建request的拦截器，在请求之前做统一的处理，这里是设置Content-Type\r\nrequest.interceptors.request.use(config => {\r\n    config.headers['Content-Type'] = 'application/json;charset=utf-8'\r\n    return config\r\n}, error => {\r\n    //如果出错则不继续执行\r\n    return Promise.reject(error)\r\n})\r\n//response拦截器，统一处理返回结果\r\nrequest.interceptors.response.use(\r\n    response => {\r\n        let res = response.data\r\n        //如果response是文件类型的就直接返回\r\n        if (response.config.responseType === 'blob') {\r\n            return res\r\n        }\r\n        //如果data是string类型的就转换成json\r\n        if (typeof res === 'string') {\r\n            res = res ? JSON.parse(res) : res\r\n        }\r\n        return res\r\n    }\r\n)\r\n\r\n//导出\r\nexport default request\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,MAAMC,OAAO,GAAGD,KAAK,CAACE,MAAM,CAAC;EACzBC,OAAO,EAAE,IAAI,CAAC;AAClB,CAAC,CAAC;AACF;AACAF,OAAO,CAACG,YAAY,CAACH,OAAO,CAACI,GAAG,CAACC,MAAM,IAAI;EACvCA,MAAM,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,gCAAgC;EACjE,OAAOD,MAAM;AACjB,CAAC,EAAEE,KAAK,IAAI;EACR;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAChC,CAAC,CAAC;AACF;AACAP,OAAO,CAACG,YAAY,CAACO,QAAQ,CAACN,GAAG,CAC7BM,QAAQ,IAAI;EACR,IAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAI;EACvB;EACA,IAAIF,QAAQ,CAACL,MAAM,CAACQ,YAAY,KAAK,MAAM,EAAE;IACzC,OAAOF,GAAG;EACd;EACA;EACA,IAAI,OAAOA,GAAG,KAAK,QAAQ,EAAE;IACzBA,GAAG,GAAGA,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,GAAGA,GAAG;EACrC;EACA,OAAOA,GAAG;AACd,CACJ,CAAC;;AAED;AACA,eAAeX,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}